# Generated by Django 2.2.7 on 2019-11-19 02:26

import assessment.assess.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import private_storage.fields
import private_storage.storage.files


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('builder', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('complete', 'Complete')], default='draft', max_length=16)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessment_group_set', to='builder.Activity')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessment_group_set', to='builder.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('last_edited', models.DateTimeField(auto_now=True)),
                ('assessment_type', models.CharField(choices=[('qa', 'Quality Assurance'), ('qc', 'Quality Control')], max_length=16)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('complete', 'Complete')], default='draft', max_length=16)),
                ('assessor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_set', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_set', to='builder.AssessmentCategory')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessment_set', to='assess.AssessmentGroup')),
                ('last_edited_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assessment Record',
                'ordering': ('category__topic__order', 'category__activity__order', '-created'),
            },
        ),
        migrations.CreateModel(
            name='MetricScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicable', models.BooleanField(default=True)),
                ('score', models.PositiveSmallIntegerField(choices=[(0, 'Not Compliant'), (1, 'Needs Work'), (2, 'Fully Compliant')], default=0)),
                ('comments', models.TextField(blank=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_set', to='assess.AssessmentRecord')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_set', to='builder.AssessmentMetric')),
            ],
            options={
                'ordering': ('assessment', 'metric__question'),
            },
        ),
        migrations.CreateModel(
            name='SupportingDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('none', 'None / Missing'), ('spreadsheet', 'Spreadsheet'), ('notes', 'Notes')], default='none', max_length=64)),
                ('document_location', models.CharField(choices=[('attached', 'Attached'), ('LINK_DOCUMENT_LOCATION', 'Link')], default='attached', max_length=64)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('file', private_storage.fields.PrivateFileField(blank=True, null=True, storage=private_storage.storage.files.PrivateFileSystemStorage(), upload_to=assessment.assess.models.supporting_doc_directory_path)),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doc_set', to='assess.MetricScore')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Short label for the subject of this assessment', max_length=128)),
                ('description', models.TextField(blank=True, help_text='Optional longer description of the assessment subject.')),
                ('record', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject', to='assess.AssessmentRecord')),
            ],
            options={
                'verbose_name': 'Assessment Subject',
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='assessmentgroup',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('topic', None), ('activity', None), _connector='OR'), models.Q(models.Q(_negated=True, topic=None), models.Q(_negated=True, activity=None), _connector='OR')), name='group_exclusive_activity_or_topic'),
        ),
    ]
